services:
  frontend:
    build:
      context: ./todoapp-fe
    ports:
      - "3000:3000"
    volumes:
      - ./todoapp-fe/src:/app/src
    environment:
      NODE_ENV: dev
      VITE_API_URL: http://localhost:8080
    depends_on:
      - backend
      
  backend:
    build:
      context: ./todoapp-be
    ports:
      - "8080:3000"
    volumes:
      - ./todoapp-be/src:/app/src
    environment:
      NODE_ENV: dev
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}  
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"] # Replace with your backend health check endpoint
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    image: postgres:17.2
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data:

